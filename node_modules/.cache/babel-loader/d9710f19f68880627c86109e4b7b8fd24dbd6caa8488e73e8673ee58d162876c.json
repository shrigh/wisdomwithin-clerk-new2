{"ast":null,"code":"// src/organization.ts\nfunction getCurrentOrganizationMembership(organizationMemberships, organizationId) {\n  return organizationMemberships.find(organizationMembership => organizationMembership.organization.id === organizationId);\n}\nexport { getCurrentOrganizationMembership };","map":{"version":3,"names":["getCurrentOrganizationMembership","organizationMemberships","organizationId","find","organizationMembership","organization","id"],"sources":["D:\\Ripple Media Office work\\React\\wisdomwithin-clerk-new\\node_modules\\@clerk\\shared\\src\\organization.ts"],"sourcesContent":["import type { OrganizationMembershipResource } from '@clerk/types';\n\n/**\n * Finds the organization membership for a given organization ID from a list of memberships\n * @param organizationMemberships - Array of organization memberships to search through\n * @param organizationId - ID of the organization to find the membership for\n * @returns The matching organization membership or undefined if not found\n */\nexport function getCurrentOrganizationMembership(\n  organizationMemberships: OrganizationMembershipResource[],\n  organizationId: string,\n) {\n  return organizationMemberships.find(\n    organizationMembership => organizationMembership.organization.id === organizationId,\n  );\n}\n"],"mappings":";AAQO,SAASA,iCACdC,uBAAA,EACAC,cAAA,EACA;EACA,OAAOD,uBAAA,CAAwBE,IAAA,CAC7BC,sBAAA,IAA0BA,sBAAA,CAAuBC,YAAA,CAAaC,EAAA,KAAOJ,cACvE;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}